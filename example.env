# ===========================================
# 🚀 代码审查系统 - 环境变量配置
# ===========================================

# ==================== 环境配置 ====================
# DEBUG 模式：True（开发环境）或 False（生产环境）
# 影响 CSRF、CORS、HTTPS、ALLOWED_HOSTS 等安全配置
DEBUG=True

# ==================== Django 基础配置 ====================
# Django密钥（生产环境必须修改！）
# 生成新密钥：python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"
SECRET_KEY=your-secret-key-here-CHANGE-THIS-IN-PRODUCTION

# 允许访问的主机（仅生产环境需要，多个用逗号分隔）
# 开发环境（DEBUG=True）会自动允许所有主机
ALLOWED_HOSTS=47.118.16.173,www.wsztest.online

# ==================== 数据库配置 ====================
# SQLite（默认，简单部署）
# DB_ENGINE=django.db.backends.sqlite3
# DB_NAME=db.sqlite3

# MySQL（可选，生产环境推荐）
DB_ENGINE=django.db.backends.mysql
DB_NAME=your_mysql_name
DB_USER=your_mysql_user
DB_PASSWORD=your_mysql_pwd
DB_HOST=localhost
DB_PORT=your_mysql_port

# ==================== Ollama AI 配置 ====================
# Ollama 服务地址
OLLAMA_BASE_URL=http://localhost:11434
# 默认模型（注意大小写匹配服务器上的模型名称）
OLLAMA_DEFAULT_CHAT_MODEL=llama3.1:8b
OLLAMA_CODE_REVIEW_MODEL=llama3.1:8b
OLLAMA_COMMIT_ANALYSIS_MODEL=llama3.1:8b

# 超时配置（大型代码分析需要更长时间）
OLLAMA_CONNECTION_TIMEOUT=10
OLLAMA_REQUEST_TIMEOUT=600  # 10分钟，适合大型提交分析
OLLAMA_MAX_RETRIES=2

# 内容限制
OLLAMA_MAX_PROMPT_LENGTH=50000
OLLAMA_MAX_CODE_LENGTH=100000  # 增加到100KB，适合单个提交处理

# ==================== Celery 异步任务配置 ====================
# Redis 配置（消息队列）
CELERY_BROKER_URL=redis://localhost:6379/0
CELERY_RESULT_BACKEND=redis://localhost:6379/0

# Worker 配置
CELERY_WORKER_CONCURRENCY=2
CELERY_WORKER_LOGLEVEL=info

# ==================== 调试配置 ====================
# 日志级别
LOG_LEVEL=INFO
# Ollama 调试
OLLAMA_DEBUG=false

# ===========================================
# 📝 配置说明：
# 1. 仓库配置现在通过Django Admin界面管理（/admin/）
#    - GitHub Token：每个仓库独立配置
#    - Webhook Secret：每个仓库独立配置  
#    - 企业微信URL：每个仓库可独立配置
#    - 自定义提示词：每个仓库可独立配置
# 2. 如果使用 ngrok，请将域名添加到 ALLOWED_HOSTS
# 3. 生产环境建议使用 MySQL 数据库
# 4. Redis 用于 Celery 异步任务，确保 Redis 服务运行
# 5. 首次使用需要创建Django超级用户：python manage.py createsuperuser
# ===========================================